name: full test suite
on:
  push:
    branches: [main]
  pull_request:
    branches: ["*"]
  workflow_dispatch:
permissions:
  contents: write
  pages: write
  id-token: write
jobs:
  lint:
    runs-on: ubuntu-latest
    name: lint code
    steps:
      - name: checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - name: setup bun
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2
        with:
          bun-version: "latest"
      - name: install dependencies
        run: bun i
      - name: run linter
        run: bun lint:check
  build-test:
    runs-on: ubuntu-latest
    name: build test
    steps:
      - name: checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - name: setup bun
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2
        with:
          bun-version: 'latest'
      - name: install dependencies
        run: bun i
      - name: build application
        run: bun bake
      - name: check build artifacts
        run: |
          test -d dist/ui
          test -d dist/ui/fonts
          test -f dist/ui/apple-touch-icon.png
          test -f dist/ui/editor.js
          test -f dist/ui/favicon-96x96.png
          test -f dist/ui/favicon.ico
          test -f dist/ui/favicon.svg
          test -f dist/ui/icons*.svg
          test -f dist/ui/logo.png
          test -f dist/ui/stylez.css
          test -f dist/ui/topazplus_1200.woff2
          test -f dist/ui/web-app-manifest-192x192.png
          test -f dist/ui/web-app-manifest-512x512.png
          test -f dist/ui/worker.js
          test -f dist/favicon.ico
          test -f dist/humans.txt
          test -f dist/index.html
          test -f dist/robots.txt
          test -f dist/service.js
          test -f dist/site.webmanifest
          test -f dist/sitemap.xml
          test -f dist/workbox-*.js
          echo "Build successful"
      - name: upload build results as artifact
        if: success() && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: editor-build
          path: dist
          retention-days: 3
      - name: add artifact download info to summary
        run: |
          RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo "### :package: build Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- artifacts for this run are available under the **Artifacts** section of [this workflow run]($RUN_URL)." >> $GITHUB_STEP_SUMMARY
          echo "- or use the cli: \`gh run download ${{ github.run_id }} -n editor-build\`" >> $GITHUB_STEP_SUMMARY
  unit-tests:
    runs-on: ubuntu-latest
    name: unit tests
    steps:
      - name: checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 0
      - name: setup bun
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2
        with:
          bun-version: "latest"
      - name: install dependencies
        run: bun i
      - name: run unit tests with coverage
        run: bun test:unit
      - name: inject dark theme into coverage report
        run: |
          echo "@media (prefers-color-scheme:dark){.cover-empty,body{background:#000}body{color:#efefef}table{color:#000}table,td,th{border:1px solid #222!important}td.empty{color:#eee}.cbranch-no,.cstat-no,.fstat-no{background:#afe9dc}.cline-yes,.high{background:#f2bfff}.cline-no,.low{background:#bbf2e8}.fraction,.quiet,table .chart,table .high,table .low,td.text,th.file,th.pct{-webkit-filter:invert(100%)}.footer{display:none!important}body>div.wrapper>div:first-child>p{background:#ddd;width:fit-content;padding:10px}}" >> tests/results/coverage/base.css
      - name: Upload all unit test results as artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: unit-test-results
          path: tests/results/coverage/
          retention-days: 3
      - name: add artifact download info to summary
        run: |
          RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo "### :test_tube: unit test artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- artifacts for this run are available under the **Artifacts** section of [this workflow run]($RUN_URL)." >> $GITHUB_STEP_SUMMARY
          echo "- or use the cli: \`gh run download ${{ github.run_id }} -n unit-test-results\`" >> $GITHUB_STEP_SUMMARY
  e2e-tests:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.55.0-jammy
      options: --user root
    steps:
      - name: checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - name: Install unzip
        run: apt-get update && apt-get install -y unzip
      - name: setup bun
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2
        with:
          bun-version: "latest"
      - name: install project dependencies
        run: bun i
      - name: install playwright and its dependencies
        run: bun test:install
      - name: Build application
        run: bun bake
      - name: run e2e tests
        run: bun test:e2e --workers 8
        env:
          HOME: /root
          PLAYWRIGHT_TEST_BASE_URL: http://localhost:8060
      - name: upload playwright html report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: ${{ always() }}
        with:
          name: playwright-report
          path: tests/results/playwright-report/
          retention-days: 3
      - name: add artifact download info to summary
        run: |
          RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo "### :dart: e2e test artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- artifacts for this run are available under the **Artifacts** section of [this workflow run]($RUN_URL)." >> $GITHUB_STEP_SUMMARY
          echo "- or use the cli: \`gh run download ${{ github.run_id }} -n e2e-test-results\`" >> $GITHUB_STEP_SUMMARY
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    name: deploy editor
    needs: [lint, unit, build, e2e]
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    steps:
      - name: download build artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: editor-build
          path: .
      - name: download unit artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: unit-test-results
          path: unit
      - name: download e2e artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: playwright-report
          path: e2e
      - name: upload release build artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: github-pages
          path: .
          retention-days: 3
      - name: deploy editor
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4
        with:
          artifact_name: github-pages

