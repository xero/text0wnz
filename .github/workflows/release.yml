name: create release
on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch
permissions:
  contents: write
jobs:
  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      new_version: ${{ steps.bump_version.outputs.new_version }}
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 0
      - name: setup bun
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2
        with:
          bun-version: 'latest'
      - name: get current version
        id: current_version
        run: echo "version=$(bun -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      - name: bump version in package.json
        id: bump_version
        run: |
          bun pm version ${{ github.event.inputs.version_type }} --no-git-tag-version
          NEW_VERSION=$(bun -p "require('./package.json').version")
          echo "new_version=${NEW_VERSION}" >> $GITHUB_OUTPUT
      - name: commit updated package.json
        run: |
          COMMIT_NAME="${{ github.actor }}"
          COMMIT_EMAIL="${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "$COMMIT_NAME"
          git config --global user.email "$COMMIT_EMAIL"
          git add package.json
          git commit -m "chore(release) v${{ steps.bump_version.outputs.new_version }}"
          git push origin main
      - name: create and push tag
        run: |
          git tag v${{ steps.bump_version.outputs.new_version }}
          git push origin v${{ steps.bump_version.outputs.new_version }}
      - name: generate changelog link
        id: changelog
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$PREVIOUS_TAG" ]; then
            CHANGELOG="https://github.com/${{ github.repository }}/commits/v${{ steps.bump_version.outputs.new_version }}"
          else
            CHANGELOG="https://github.com/${{ github.repository }}/compare/$PREVIOUS_TAG...v${{ steps.bump_version.outputs.new_version }}"
          fi
          echo "url=${CHANGELOG}" >> $GITHUB_OUTPUT
      - name: create release
        id: create_release
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2
        with:
          tag_name: v${{ steps.bump_version.outputs.new_version }}
          name: v${{ steps.bump_version.outputs.new_version }}
          body: |
            changeset: ${{ steps.changelog.outputs.url }}
          draft: false
          prerelease: false
          generate_release_notes: true
  build:
    needs: release
    uses: ./.github/workflows/build.yml
  attach-build:
    runs-on: ubuntu-latest
    needs: [release, build]
    steps:
      - name: download build artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: editor-build
          path: dist
      - name: compress build artifacts
        run: |
          cd dist
          zip -r ../editor-build.zip .
      - name: upload build to release
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2
        with:
          tag_name: v${{ needs.release.outputs.new_version }}
          files: editor-build.zip
